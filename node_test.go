//
// Copyright (c) 2011-2019 Canonical Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package yaml_test

import (
	"bytes"
	"fmt"
	"os"

	"io"
	"strings"

	"github.com/lonegunmanb/atomatt-yaml"
	. "gopkg.in/check.v1"
)

var nodeTests = []struct {
	yaml string
	node yaml.Node
}{
	{
		"null\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  5,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "null",
				Tag:       "!!null",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 5,
				Index:     0,
				IndexEnd:  4,
			}},
		},
	}, {
		"foo\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  4,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "foo",
				Tag:       "!!str",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 4,
				Index:     0,
				IndexEnd:  3,
			}},
		},
	}, {
		"\"foo\"\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  6,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Style:     yaml.DoubleQuotedStyle,
				Value:     "foo",
				Tag:       "!!str",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 6,
				Index:     0,
				IndexEnd:  5,
			}},
		},
	}, {
		"'foo'\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  6,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Style:     yaml.SingleQuotedStyle,
				Value:     "foo",
				Tag:       "!!str",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 6,
				Index:     0,
				IndexEnd:  5,
			}},
		},
	}, {
		"!!str 123\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  10,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Style:     yaml.TaggedStyle,
				Value:     "123",
				Tag:       "!!str",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 10,
				Index:     0,
				IndexEnd:  9,
			}},
		},
	}, {
		// Although the node isn't TaggedStyle, dropping the tag would change the value.
		"[encode]!!binary gIGC\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   1,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:   yaml.ScalarNode,
				Value:  "gIGC",
				Tag:    "!!binary",
				Line:   1,
				Column: 1,
			}},
		},
	}, {
		// Item doesn't have a tag, but needs to be binary encoded due to its content.
		"[encode]!!binary gIGC\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   1,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:   yaml.ScalarNode,
				Value:  "\x80\x81\x82",
				Line:   1,
				Column: 1,
			}},
		},
	}, {
		// Same, but with strings we can just quote them.
		"[encode]\"123\"\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   1,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:   yaml.ScalarNode,
				Value:  "123",
				Tag:    "!!str",
				Line:   1,
				Column: 1,
			}},
		},
	}, {
		"!tag:something 123\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  19,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Style:     yaml.TaggedStyle,
				Value:     "123",
				Tag:       "!tag:something",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 19,
				Index:     0,
				IndexEnd:  18,
			}},
		},
	}, {
		"[encode]!tag:something 123\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   1,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:   yaml.ScalarNode,
				Value:  "123",
				Tag:    "!tag:something",
				Line:   1,
				Column: 1,
			}},
		},
	}, {
		"!tag:something {}\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  18,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Style:     yaml.TaggedStyle | yaml.FlowStyle,
				Tag:       "!tag:something",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 18,
				Index:     0,
				IndexEnd:  17,
			}},
		},
	}, {
		"[encode]!tag:something {}\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   1,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:   yaml.MappingNode,
				Style:  yaml.FlowStyle,
				Tag:    "!tag:something",
				Line:   1,
				Column: 1,
			}},
		},
	}, {
		"!tag:something []\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  18,
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Style:     yaml.TaggedStyle | yaml.FlowStyle,
				Tag:       "!tag:something",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 18,
				Index:     0,
				IndexEnd:  17,
			}},
		},
	}, {
		"[encode]!tag:something []\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   1,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:   yaml.SequenceNode,
				Style:  yaml.FlowStyle,
				Tag:    "!tag:something",
				Line:   1,
				Column: 1,
			}},
		},
	}, {
		"''\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  3,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Style:     yaml.SingleQuotedStyle,
				Value:     "",
				Tag:       "!!str",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 3,
				Index:     0,
				IndexEnd:  2,
			}},
		},
	}, {
		"|\n  foo\n  bar\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   4,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  14,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Style:     yaml.LiteralStyle,
				Value:     "foo\nbar\n",
				Tag:       "!!str",
				Line:      1,
				Column:    1,
				LineEnd:   4,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  14,
			}},
		},
	}, {
		"true\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  5,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "true",
				Tag:       "!!bool",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 5,
				Index:     0,
				IndexEnd:  4,
			}},
		},
	}, {
		"-10\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  4,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "-10",
				Tag:       "!!int",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 4,
				Index:     0,
				IndexEnd:  3,
			}},
		},
	}, {
		"4294967296\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  11,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "4294967296",
				Tag:       "!!int",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 11,
				Index:     0,
				IndexEnd:  10,
			}},
		},
	}, {
		"0.1000\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  7,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "0.1000",
				Tag:       "!!float",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 7,
				Index:     0,
				IndexEnd:  6,
			}},
		},
	}, {
		"-.inf\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  6,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     "-.inf",
				Tag:       "!!float",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 6,
				Index:     0,
				IndexEnd:  5,
			}},
		},
	}, {
		".nan\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  5,
			Content: []*yaml.Node{{
				Kind:      yaml.ScalarNode,
				Value:     ".nan",
				Tag:       "!!float",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 5,
				Index:     0,
				IndexEnd:  4,
			}},
		},
	}, {
		"{}\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  3,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Style:     yaml.FlowStyle,
				Value:     "",
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 3,
				Index:     0,
				IndexEnd:  2,
			}},
		},
	}, {
		"a: b c\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  7,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Value:     "",
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   2,
				ColumnEnd: 1,
				Index:     0,
				// XXX doesn't match line/col
				IndexEnd: 6,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 2,
					Index:     0,
					IndexEnd:  1,
				}, {
					Kind:      yaml.ScalarNode,
					Value:     "b c",
					Tag:       "!!str",
					Line:      1,
					Column:    4,
					LineEnd:   1,
					ColumnEnd: 7,
					Index:     3,
					IndexEnd:  6,
				}},
			}},
		},
	}, {
		"a:\n  b: c\n  d: e\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   4,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  17,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   4,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  16,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 2,
					Index:     0,
					IndexEnd:  1,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   4,
					ColumnEnd: 1,
					Index:     5,
					IndexEnd:  16,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Value:     "b",
						Tag:       "!!str",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 4,
						Index:     5,
						IndexEnd:  6,
					}, {
						Kind:      yaml.ScalarNode,
						Value:     "c",
						Tag:       "!!str",
						Line:      2,
						Column:    6,
						LineEnd:   2,
						ColumnEnd: 7,
						Index:     8,
						IndexEnd:  9,
					}, {
						Kind:      yaml.ScalarNode,
						Value:     "d",
						Tag:       "!!str",
						Line:      3,
						Column:    3,
						LineEnd:   3,
						ColumnEnd: 4,
						Index:     12,
						IndexEnd:  13,
					}, {
						Kind:      yaml.ScalarNode,
						Value:     "e",
						Tag:       "!!str",
						Line:      3,
						Column:    6,
						LineEnd:   3,
						ColumnEnd: 7,
						Index:     15,
						IndexEnd:  16,
					}},
				}},
			}},
		},
	}, {
		"a:\n- b: c\n  d: e\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   4,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  17,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   4,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  16,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 2,
					Index:     0,
					IndexEnd:  1,
				}, {
					Kind:      yaml.SequenceNode,
					Tag:       "!!seq",
					Line:      2,
					Column:    1,
					LineEnd:   4,
					ColumnEnd: 1,
					Index:     3,
					IndexEnd:  16,
					Content: []*yaml.Node{{
						Kind:      yaml.MappingNode,
						Tag:       "!!map",
						Line:      2,
						Column:    3,
						LineEnd:   4,
						ColumnEnd: 1,
						Index:     5,
						IndexEnd:  16,
						Content: []*yaml.Node{{
							Kind:      yaml.ScalarNode,
							Value:     "b",
							Tag:       "!!str",
							Line:      2,
							Column:    3,
							LineEnd:   2,
							ColumnEnd: 4,
							Index:     5,
							IndexEnd:  6,
						}, {
							Kind:      yaml.ScalarNode,
							Value:     "c",
							Tag:       "!!str",
							Line:      2,
							Column:    6,
							LineEnd:   2,
							ColumnEnd: 7,
							Index:     8,
							IndexEnd:  9,
						}, {
							Kind:      yaml.ScalarNode,
							Value:     "d",
							Tag:       "!!str",
							Line:      3,
							Column:    3,
							LineEnd:   3,
							ColumnEnd: 4,
							Index:     12,
							IndexEnd:  13,
						}, {
							Kind:      yaml.ScalarNode,
							Value:     "e",
							Tag:       "!!str",
							Line:      3,
							Column:    6,
							LineEnd:   3,
							ColumnEnd: 7,
							Index:     15,
							IndexEnd:  16,
						}},
					}},
				}},
			}},
		},
	}, {
		"a: # AI\n- b\nc:\n- d\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   5,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  19,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  18,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "a",
					LineComment: "# AI",
					Line:        1,
					Column:      1,
					LineEnd:     1,
					ColumnEnd:   2,
					Index:       0,
					IndexEnd:    1,
				}, {
					Kind:      yaml.SequenceNode,
					Tag:       "!!seq",
					Line:      2,
					Column:    1,
					LineEnd:   3,
					ColumnEnd: 1,
					Index:     8,
					IndexEnd:  12,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "b",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 4,
						Index:     10,
						IndexEnd:  11,
					}},
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "c",
					Line:      3,
					Column:    1,
					LineEnd:   3,
					ColumnEnd: 2,
					Index:     12,
					IndexEnd:  13,
				}, {
					Kind:      yaml.SequenceNode,
					Tag:       "!!seq",
					Line:      4,
					Column:    1,
					LineEnd:   5,
					ColumnEnd: 1,
					Index:     15,
					IndexEnd:  18,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "d",
						Line:      4,
						Column:    3,
						LineEnd:   4,
						ColumnEnd: 4,
						Index:     17,
						IndexEnd:  18,
					}},
				}},
			}},
		},
	}, {
		"- a\n- b\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   3,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  8,
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Value:     "",
				Tag:       "!!seq",
				Line:      1,
				Column:    1,
				LineEnd:   3,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  7,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    3,
					LineEnd:   1,
					ColumnEnd: 4,
					Index:     2,
					IndexEnd:  3,
				}, {
					Kind:      yaml.ScalarNode,
					Value:     "b",
					Tag:       "!!str",
					Line:      2,
					Column:    3,
					LineEnd:   2,
					ColumnEnd: 4,
					Index:     6,
					IndexEnd:  7,
				}},
			}},
		},
	}, {
		"- a\n- - b\n  - c\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   4,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  16,
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      1,
				Column:    1,
				LineEnd:   4,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  15,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    3,
					LineEnd:   1,
					ColumnEnd: 4,
					Index:     2,
					IndexEnd:  3,
				}, {
					Kind:      yaml.SequenceNode,
					Tag:       "!!seq",
					Line:      2,
					Column:    3,
					LineEnd:   4,
					ColumnEnd: 1,
					Index:     6,
					IndexEnd:  15,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Value:     "b",
						Tag:       "!!str",
						Line:      2,
						Column:    5,
						LineEnd:   2,
						ColumnEnd: 6,
						Index:     8,
						IndexEnd:  9,
					}, {
						Kind:      yaml.ScalarNode,
						Value:     "c",
						Tag:       "!!str",
						Line:      3,
						Column:    5,
						LineEnd:   3,
						ColumnEnd: 6,
						Index:     14,
						IndexEnd:  15,
					}},
				}},
			}},
		},
	}, {
		"[a, b]\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   2,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  7,
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Style:     yaml.FlowStyle,
				Value:     "",
				Tag:       "!!seq",
				Line:      1,
				Column:    1,
				LineEnd:   1,
				ColumnEnd: 7,
				Index:     0,
				IndexEnd:  6,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    2,
					LineEnd:   1,
					ColumnEnd: 3,
					Index:     1,
					IndexEnd:  2,
				}, {
					Kind:      yaml.ScalarNode,
					Value:     "b",
					Tag:       "!!str",
					Line:      1,
					Column:    5,
					LineEnd:   1,
					ColumnEnd: 6,
					Index:     4,
					IndexEnd:  5,
				}},
			}},
		},
	}, {
		"- a\n- [b, c]\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   3,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  13,
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      1,
				Column:    1,
				LineEnd:   3,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  12,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    3,
					LineEnd:   1,
					ColumnEnd: 4,
					Index:     2,
					IndexEnd:  3,
				}, {
					Kind:      yaml.SequenceNode,
					Tag:       "!!seq",
					Style:     yaml.FlowStyle,
					Line:      2,
					Column:    3,
					LineEnd:   2,
					ColumnEnd: 9,
					Index:     6,
					IndexEnd:  12,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Value:     "b",
						Tag:       "!!str",
						Line:      2,
						Column:    4,
						LineEnd:   2,
						ColumnEnd: 5,
						Index:     7,
						IndexEnd:  8,
					}, {
						Kind:      yaml.ScalarNode,
						Value:     "c",
						Tag:       "!!str",
						Line:      2,
						Column:    7,
						LineEnd:   2,
						ColumnEnd: 8,
						Index:     10,
						IndexEnd:  11,
					}},
				}},
			}},
		},
	}, {
		"a: &x 1\nb: &y 2\nc: *x\nd: *y\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   5,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  28,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Line:      1,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  27,
				Tag:       "!!map",
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Value:     "a",
					Tag:       "!!str",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 2,
					Index:     0,
					IndexEnd:  1,
				},
					saveNode("x", &yaml.Node{
						Kind:      yaml.ScalarNode,
						Value:     "1",
						Tag:       "!!int",
						Anchor:    "x",
						Line:      1,
						Column:    4,
						LineEnd:   1,
						ColumnEnd: 8,
						Index:     3,
						IndexEnd:  7,
					}),
					{
						Kind:      yaml.ScalarNode,
						Value:     "b",
						Tag:       "!!str",
						Line:      2,
						Column:    1,
						LineEnd:   2,
						ColumnEnd: 2,
						Index:     8,
						IndexEnd:  9,
					},
					saveNode("y", &yaml.Node{
						Kind:      yaml.ScalarNode,
						Value:     "2",
						Tag:       "!!int",
						Anchor:    "y",
						Line:      2,
						Column:    4,
						LineEnd:   2,
						ColumnEnd: 8,
						Index:     11,
						IndexEnd:  15,
					}),
					{
						Kind:      yaml.ScalarNode,
						Value:     "c",
						Tag:       "!!str",
						Line:      3,
						Column:    1,
						LineEnd:   3,
						ColumnEnd: 2,
						Index:     16,
						IndexEnd:  17,
					}, {
						Kind:      yaml.AliasNode,
						Value:     "x",
						Alias:     dropNode("x"),
						Line:      3,
						Column:    4,
						LineEnd:   3,
						ColumnEnd: 6,
						Index:     19,
						IndexEnd:  21,
					}, {
						Kind:      yaml.ScalarNode,
						Value:     "d",
						Tag:       "!!str",
						Line:      4,
						Column:    1,
						LineEnd:   4,
						ColumnEnd: 2,
						Index:     22,
						IndexEnd:  23,
					}, {
						Kind:      yaml.AliasNode,
						Value:     "y",
						Tag:       "",
						Alias:     dropNode("y"),
						Line:      4,
						Column:    4,
						LineEnd:   4,
						ColumnEnd: 6,
						Index:     25,
						IndexEnd:  27,
					}},
			}},
		},
	}, {

		"# One\n# Two\ntrue # Three\n# Four\n# Five\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      3,
			Column:    1,
			LineEnd:   6,
			ColumnEnd: 1,
			Index:     12,
			IndexEnd:  39,
			Content: []*yaml.Node{{
				Kind:        yaml.ScalarNode,
				Value:       "true",
				Tag:         "!!bool",
				Line:        3,
				Column:      1,
				LineEnd:     3,
				ColumnEnd:   5,
				Index:       12,
				IndexEnd:    16,
				HeadComment: "# One\n# Two",
				LineComment: "# Three",
				FootComment: "# Four\n# Five",
			}},
		},
	}, {

		"[decode]\n# One\n\n# Two\n\n# Three\ntrue # Four\n# Five\n\n# Six\n\n# Seven\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        7,
			Column:      1,
			LineEnd:     13,
			ColumnEnd:   1,
			Index:       23,
			IndexEnd:    58,
			HeadComment: "# One\n\n# Two",
			FootComment: "# Six\n\n# Seven",
			Content: []*yaml.Node{{
				Kind:        yaml.ScalarNode,
				Value:       "true",
				Tag:         "!!bool",
				Line:        7,
				Column:      1,
				LineEnd:     7,
				ColumnEnd:   5,
				Index:       23,
				IndexEnd:    27,
				HeadComment: "# Three",
				LineComment: "# Four",
				FootComment: "# Five",
			}},
		},
	}, {
		// Write out the pound character if missing from comments.
		"[encode]# One\n# Two\ntrue # Three\n# Four\n# Five\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   3,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:        yaml.ScalarNode,
				Value:       "true",
				Tag:         "!!bool",
				Line:        3,
				Column:      1,
				HeadComment: "One\nTwo\n",
				LineComment: "Three\n",
				FootComment: "Four\nFive\n",
			}},
		},
	}, {
		"[encode]#   One\n#   Two\ntrue #   Three\n#   Four\n#   Five\n",
		yaml.Node{
			Kind:   yaml.DocumentNode,
			Line:   3,
			Column: 1,
			Content: []*yaml.Node{{
				Kind:        yaml.ScalarNode,
				Value:       "true",
				Tag:         "!!bool",
				Line:        3,
				Column:      1,
				HeadComment: "  One\n  Two",
				LineComment: "  Three",
				FootComment: "  Four\n  Five",
			}},
		},
	}, {
		"# DH1\n\n# DH2\n\n# H1\n# H2\ntrue # I\n# F1\n# F2\n\n# DF1\n\n# DF2\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        7,
			Column:      1,
			LineEnd:     14,
			ColumnEnd:   1,
			Index:       24,
			IndexEnd:    57,
			HeadComment: "# DH1\n\n# DH2",
			FootComment: "# DF1\n\n# DF2",
			Content: []*yaml.Node{{
				Kind:        yaml.ScalarNode,
				Value:       "true",
				Tag:         "!!bool",
				Line:        7,
				Column:      1,
				LineEnd:     7,
				ColumnEnd:   5,
				Index:       24,
				IndexEnd:    28,
				HeadComment: "# H1\n# H2",
				LineComment: "# I",
				FootComment: "# F1\n# F2",
			}},
		},
	}, {
		"# DH1\n\n# DH2\n\n# HA1\n# HA2\nka: va # IA\n# FA1\n# FA2\n\n# HB1\n# HB2\nkb: vb # IB\n# FB1\n# FB2\n\n# DF1\n\n# DF2\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        7,
			Column:      1,
			LineEnd:     20,
			ColumnEnd:   1,
			Index:       26,
			IndexEnd:    101,
			HeadComment: "# DH1\n\n# DH2",
			FootComment: "# DF1\n\n# DF2",
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      7,
				Column:    1,
				LineEnd:   14,
				ColumnEnd: 2,
				Index:     26,
				IndexEnd:  75,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Line:        7,
					Column:      1,
					LineEnd:     7,
					ColumnEnd:   3,
					Index:       26,
					IndexEnd:    28,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1\n# HA2",
					FootComment: "# FA1\n# FA2",
				}, {
					Kind:        yaml.ScalarNode,
					Line:        7,
					Column:      5,
					LineEnd:     7,
					ColumnEnd:   7,
					Index:       30,
					IndexEnd:    32,
					Tag:         "!!str",
					Value:       "va",
					LineComment: "# IA",
				}, {
					Kind:        yaml.ScalarNode,
					Line:        13,
					Column:      1,
					LineEnd:     13,
					ColumnEnd:   3,
					Index:       63,
					IndexEnd:    65,
					Tag:         "!!str",
					Value:       "kb",
					HeadComment: "# HB1\n# HB2",
					FootComment: "# FB1\n# FB2",
				}, {
					Kind:        yaml.ScalarNode,
					Line:        13,
					Column:      5,
					LineEnd:     13,
					ColumnEnd:   7,
					Index:       67,
					IndexEnd:    69,
					Tag:         "!!str",
					Value:       "vb",
					LineComment: "# IB",
				}},
			}},
		},
	}, {
		"# DH1\n\n# DH2\n\n# HA1\n# HA2\n- la # IA\n# FA1\n# FA2\n\n# HB1\n# HB2\n- lb # IB\n# FB1\n# FB2\n\n# DF1\n\n# DF2\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        7,
			Column:      1,
			LineEnd:     20,
			ColumnEnd:   1,
			Index:       26,
			IndexEnd:    97,
			HeadComment: "# DH1\n\n# DH2",
			FootComment: "# DF1\n\n# DF2",
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      7,
				Column:    1,
				LineEnd:   14,
				ColumnEnd: 2,
				Index:     26,
				IndexEnd:  71,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        7,
					Column:      3,
					LineEnd:     7,
					ColumnEnd:   5,
					Index:       28,
					IndexEnd:    30,
					Value:       "la",
					HeadComment: "# HA1\n# HA2",
					LineComment: "# IA",
					FootComment: "# FA1\n# FA2",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        13,
					Column:      3,
					LineEnd:     13,
					ColumnEnd:   5,
					Index:       63,
					IndexEnd:    65,
					Value:       "lb",
					HeadComment: "# HB1\n# HB2",
					LineComment: "# IB",
					FootComment: "# FB1\n# FB2",
				}},
			}},
		},
	}, {
		"# DH1\n\n- la # IA\n# HB1\n- lb\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        3,
			Column:      1,
			LineEnd:     6,
			ColumnEnd:   1,
			Index:       7,
			IndexEnd:    28,
			HeadComment: "# DH1",
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      3,
				Column:    1,
				LineEnd:   6,
				ColumnEnd: 1,
				Index:     7,
				IndexEnd:  27,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        3,
					Column:      3,
					LineEnd:     3,
					ColumnEnd:   5,
					Index:       9,
					IndexEnd:    11,
					Value:       "la",
					LineComment: "# IA",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        5,
					Column:      3,
					LineEnd:     5,
					ColumnEnd:   5,
					Index:       25,
					IndexEnd:    27,
					Value:       "lb",
					HeadComment: "# HB1",
				}},
			}},
		},
	}, {
		"- la # IA\n- lb # IB\n- lc # IC\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   4,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  30,
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      1,
				Column:    1,
				LineEnd:   4,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  29,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        1,
					Column:      3,
					LineEnd:     1,
					ColumnEnd:   5,
					Index:       2,
					IndexEnd:    4,
					Value:       "la",
					LineComment: "# IA",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        2,
					Column:      3,
					LineEnd:     2,
					ColumnEnd:   5,
					Index:       12,
					IndexEnd:    14,
					Value:       "lb",
					LineComment: "# IB",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        3,
					Column:      3,
					LineEnd:     3,
					ColumnEnd:   5,
					Index:       22,
					IndexEnd:    24,
					Value:       "lc",
					LineComment: "# IC",
				}},
			}},
		},
	}, {
		"# DH1\n\n# HL1\n- - la\n  # HB1\n  - lb\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     7,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    35,
			HeadComment: "# DH1",
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      4,
				Column:    1,
				LineEnd:   7,
				ColumnEnd: 1,
				Index:     13,
				IndexEnd:  34,
				Content: []*yaml.Node{{
					Kind:        yaml.SequenceNode,
					Tag:         "!!seq",
					Line:        4,
					Column:      3,
					LineEnd:     7,
					ColumnEnd:   1,
					Index:       15,
					IndexEnd:    34,
					HeadComment: "# HL1",
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Line:      4,
						Column:    5,
						LineEnd:   4,
						ColumnEnd: 7,
						Index:     17,
						IndexEnd:  19,
						Value:     "la",
					}, {
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        6,
						Column:      5,
						LineEnd:     6,
						ColumnEnd:   7,
						Index:       32,
						IndexEnd:    34,
						Value:       "lb",
						HeadComment: "# HB1",
					}},
				}},
			}},
		},
	}, {
		"# DH1\n\n# HL1\n- # HA1\n  - la\n  # HB1\n  - lb\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     8,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    43,
			HeadComment: "# DH1",
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      4,
				Column:    1,
				LineEnd:   8,
				ColumnEnd: 1,
				Index:     13,
				IndexEnd:  42,
				Content: []*yaml.Node{{
					Kind:        yaml.SequenceNode,
					Tag:         "!!seq",
					Line:        5,
					Column:      3,
					LineEnd:     8,
					ColumnEnd:   1,
					Index:       23,
					IndexEnd:    42,
					HeadComment: "# HL1",
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        5,
						Column:      5,
						LineEnd:     5,
						ColumnEnd:   7,
						Index:       25,
						IndexEnd:    27,
						Value:       "la",
						HeadComment: "# HA1",
					}, {
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        7,
						Column:      5,
						LineEnd:     7,
						ColumnEnd:   7,
						Index:       40,
						IndexEnd:    42,
						Value:       "lb",
						HeadComment: "# HB1",
					}},
				}},
			}},
		},
	}, {
		"[decode]# DH1\n\n# HL1\n- # HA1\n\n  - la\n  # HB1\n  - lb\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     9,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    44,
			HeadComment: "# DH1",
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      4,
				Column:    1,
				LineEnd:   9,
				ColumnEnd: 1,
				Index:     13,
				IndexEnd:  43,
				Content: []*yaml.Node{{
					Kind:        yaml.SequenceNode,
					Tag:         "!!seq",
					Line:        6,
					Column:      3,
					LineEnd:     9,
					ColumnEnd:   1,
					Index:       24,
					IndexEnd:    43,
					HeadComment: "# HL1\n# HA1",
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Line:      6,
						Column:    5,
						LineEnd:   6,
						ColumnEnd: 7,
						Index:     26,
						IndexEnd:  28,
						Value:     "la",
					}, {
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        8,
						Column:      5,
						LineEnd:     8,
						ColumnEnd:   7,
						Index:       41,
						IndexEnd:    43,
						Value:       "lb",
						HeadComment: "# HB1",
					}},
				}},
			}},
		},
	}, {
		"# DH1\n\n# HA1\nka:\n  # HB1\n  kb:\n  # HC1\n  # HC2\n  - lc # IC\n  # FC1\n  # FC2\n\n  # HD1\n  - ld # ID\n  # FD1\n\n# DF1\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     18,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    111,
			HeadComment: "# DH1",
			FootComment: "# DF1",
			Content: []*yaml.Node{{
				Kind:   yaml.MappingNode,
				Tag:    "!!map",
				Line:   4,
				Column: 1,
				// XXX invalid location
				LineEnd:   16,
				ColumnEnd: 2,
				Index:     13,
				IndexEnd:  105,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        4,
					Column:      1,
					LineEnd:     4,
					ColumnEnd:   3,
					Index:       13,
					IndexEnd:    15,
					Value:       "ka",
					HeadComment: "# HA1",
				}, {
					Kind:   yaml.MappingNode,
					Tag:    "!!map",
					Line:   6,
					Column: 3,
					// XXX includes start of comment FD1. doesn't match IndexEnd.
					LineEnd:   15,
					ColumnEnd: 4,
					Index:     27,
					IndexEnd:  98,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        6,
						Column:      3,
						LineEnd:     6,
						ColumnEnd:   5,
						Index:       27,
						IndexEnd:    29,
						Value:       "kb",
						HeadComment: "# HB1",
					}, {
						Kind:      yaml.SequenceNode,
						Line:      9,
						Column:    3,
						LineEnd:   15,
						ColumnEnd: 4,
						Index:     49,
						IndexEnd:  98,
						Tag:       "!!seq",
						Content: []*yaml.Node{{
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Line:        9,
							Column:      5,
							LineEnd:     9,
							ColumnEnd:   7,
							Index:       51,
							IndexEnd:    53,
							Value:       "lc",
							HeadComment: "# HC1\n# HC2",
							LineComment: "# IC",
							FootComment: "# FC1\n# FC2",
						}, {
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Line:        14,
							Column:      5,
							LineEnd:     14,
							ColumnEnd:   7,
							Index:       88,
							IndexEnd:    90,
							Value:       "ld",
							HeadComment: "# HD1",

							LineComment: "# ID",
							FootComment: "# FD1",
						}},
					}},
				}},
			}},
		},
	}, {
		"# DH1\n\n# HA1\nka:\n  # HB1\n  kb:\n  # HC1\n  # HC2\n  - lc # IC\n  # FC1\n  # FC2\n\n  # HD1\n  - ld # ID\n  # FD1\nke: ve\n\n# DF1\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     19,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    118,
			HeadComment: "# DH1",
			FootComment: "# DF1",
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      4,
				Column:    1,
				LineEnd:   18,
				ColumnEnd: 2,
				Index:     13,
				IndexEnd:  112,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        4,
					Column:      1,
					LineEnd:     4,
					ColumnEnd:   3,
					Index:       13,
					IndexEnd:    15,
					Value:       "ka",
					HeadComment: "# HA1",
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      6,
					Column:    3,
					LineEnd:   15,
					ColumnEnd: 4,
					Index:     27,
					IndexEnd:  98,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        6,
						Column:      3,
						LineEnd:     6,
						ColumnEnd:   5,
						Index:       27,
						IndexEnd:    29,
						Value:       "kb",
						HeadComment: "# HB1",
					}, {
						Kind:      yaml.SequenceNode,
						Line:      9,
						Column:    3,
						LineEnd:   15,
						ColumnEnd: 4,
						Index:     49,
						IndexEnd:  98,
						Tag:       "!!seq",
						Content: []*yaml.Node{{
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Line:        9,
							Column:      5,
							LineEnd:     9,
							ColumnEnd:   7,
							Index:       51,
							IndexEnd:    53,
							Value:       "lc",
							HeadComment: "# HC1\n# HC2",
							LineComment: "# IC",
							FootComment: "# FC1\n# FC2",
						}, {
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Line:        14,
							Column:      5,
							LineEnd:     14,
							ColumnEnd:   7,
							Index:       88,
							IndexEnd:    90,
							Value:       "ld",
							HeadComment: "# HD1",
							LineComment: "# ID",
							FootComment: "# FD1",
						}},
					}},
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Line:      16,
					Column:    1,
					LineEnd:   16,
					ColumnEnd: 3,
					Index:     104,
					IndexEnd:  106,
					Value:     "ke",
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Line:      16,
					Column:    5,
					LineEnd:   16,
					ColumnEnd: 7,
					Index:     108,
					IndexEnd:  110,
					Value:     "ve",
				}},
			}},
		},
	}, {
		"# DH1\n\n# DH2\n\n# HA1\n# HA2\nka:\n  # HB1\n  # HB2\n  kb:\n" +
			"    # HC1\n    # HC2\n    kc:\n      # HD1\n      # HD2\n      kd: vd\n      # FD1\n      # FD2\n" +
			"    # FC1\n    # FC2\n  # FB1\n  # FB2\n# FA1\n# FA2\n\n# HE1\n# HE2\nke: ve\n# FE1\n# FE2\n\n# DF1\n\n# DF2\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			HeadComment: "# DH1\n\n# DH2",
			FootComment: "# DF1\n\n# DF2",
			Line:        7,
			Column:      1,
			LineEnd:     35,
			ColumnEnd:   1,
			Index:       26,
			IndexEnd:    235,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      7,
				Column:    1,
				LineEnd:   29,
				ColumnEnd: 2,
				Index:     26,
				IndexEnd:  209,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1\n# HA2",
					FootComment: "# FA1\n# FA2",
					Line:        7,
					Column:      1,
					LineEnd:     7,
					ColumnEnd:   3,
					Index:       26,
					IndexEnd:    28,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      10,
					Column:    3,
					LineEnd:   20,
					ColumnEnd: 4,
					Index:     48,
					IndexEnd:  163,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1\n# HB2",
						FootComment: "# FB1\n# FB2",
						Line:        10,
						Column:      3,
						LineEnd:     10,
						ColumnEnd:   5,
						Index:       48,
						IndexEnd:    50,
					}, {
						Kind:      yaml.MappingNode,
						Tag:       "!!map",
						Line:      13,
						Column:    5,
						LineEnd:   18,
						ColumnEnd: 6,
						Index:     76,
						IndexEnd:  145,
						Content: []*yaml.Node{{
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Value:       "kc",
							HeadComment: "# HC1\n# HC2",
							FootComment: "# FC1\n# FC2",
							Line:        13,
							Column:      5,
							LineEnd:     13,
							ColumnEnd:   7,
							Index:       76,
							IndexEnd:    78,
						}, {
							Kind:      yaml.MappingNode,
							Tag:       "!!map",
							Line:      16,
							Column:    7,
							LineEnd:   17,
							ColumnEnd: 8,
							Index:     110,
							IndexEnd:  123,
							Content: []*yaml.Node{{
								Kind:        yaml.ScalarNode,
								Tag:         "!!str",
								Value:       "kd",
								HeadComment: "# HD1\n# HD2",
								FootComment: "# FD1\n# FD2",
								Line:        16,
								Column:      7,
								LineEnd:     16,
								ColumnEnd:   9,
								Index:       110,
								IndexEnd:    112,
							}, {
								Kind:      yaml.ScalarNode,
								Tag:       "!!str",
								Value:     "vd",
								Line:      16,
								Column:    11,
								LineEnd:   16,
								ColumnEnd: 13,
								Index:     114,
								IndexEnd:  116,
							}},
						}},
					}},
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ke",
					HeadComment: "# HE1\n# HE2",
					FootComment: "# FE1\n# FE2",
					Line:        28,
					Column:      1,
					LineEnd:     28,
					ColumnEnd:   3,
					Index:       202,
					IndexEnd:    204,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "ve",
					Line:      28,
					Column:    5,
					LineEnd:   28,
					ColumnEnd: 7,
					Index:     206,
					IndexEnd:  208,
				}},
			}},
		},
	}, {
		// Same as above but indenting ke in so it's also part of ka's value.
		"# DH1\n\n# DH2\n\n# HA1\n# HA2\nka:\n  # HB1\n  # HB2\n  kb:\n" +
			"    # HC1\n    # HC2\n    kc:\n      # HD1\n      # HD2\n      kd: vd\n      # FD1\n      # FD2\n" +
			"    # FC1\n    # FC2\n  # FB1\n  # FB2\n\n  # HE1\n  # HE2\n  ke: ve\n  # FE1\n  # FE2\n# FA1\n# FA2\n\n# DF1\n\n# DF2\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			HeadComment: "# DH1\n\n# DH2",
			FootComment: "# DF1\n\n# DF2",
			Line:        7,
			Column:      1,
			LineEnd:     35,
			ColumnEnd:   1,
			Index:       26,
			IndexEnd:    245,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      7,
				Column:    1,
				LineEnd:   28,
				ColumnEnd: 2,
				Index:     26,
				IndexEnd:  219,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1\n# HA2",
					FootComment: "# FA1\n# FA2",
					Line:        7,
					Column:      1,
					LineEnd:     7,
					ColumnEnd:   3,
					Index:       26,
					IndexEnd:    28,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      10,
					Column:    3,
					LineEnd:   27,
					ColumnEnd: 4,
					Index:     48,
					IndexEnd:  205,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1\n# HB2",
						FootComment: "# FB1\n# FB2",
						Line:        10,
						Column:      3,
						LineEnd:     10,
						ColumnEnd:   5,
						Index:       48,
						IndexEnd:    50,
					}, {
						Kind:      yaml.MappingNode,
						Tag:       "!!map",
						Line:      13,
						Column:    5,
						LineEnd:   18,
						ColumnEnd: 6,
						Index:     76,
						IndexEnd:  145,
						Content: []*yaml.Node{{
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Value:       "kc",
							HeadComment: "# HC1\n# HC2",
							FootComment: "# FC1\n# FC2",
							Line:        13,
							Column:      5,
							LineEnd:     13,
							ColumnEnd:   7,
							Index:       76,
							IndexEnd:    78,
						}, {
							Kind:      yaml.MappingNode,
							Tag:       "!!map",
							Line:      16,
							Column:    7,
							LineEnd:   17,
							ColumnEnd: 8,
							Index:     110,
							IndexEnd:  123,
							Content: []*yaml.Node{{
								Kind:        yaml.ScalarNode,
								Tag:         "!!str",
								Value:       "kd",
								HeadComment: "# HD1\n# HD2",
								FootComment: "# FD1\n# FD2",
								Line:        16,
								Column:      7,
								LineEnd:     16,
								ColumnEnd:   9,
								Index:       110,
								IndexEnd:    112,
							}, {
								Kind:      yaml.ScalarNode,
								Tag:       "!!str",
								Value:     "vd",
								Line:      16,
								Column:    11,
								LineEnd:   16,
								ColumnEnd: 13,
								Index:     114,
								IndexEnd:  116,
							}},
						}},
					}, {
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "ke",
						HeadComment: "# HE1\n# HE2",
						FootComment: "# FE1\n# FE2",
						Line:        26,
						Column:      3,
						LineEnd:     26,
						ColumnEnd:   5,
						Index:       196,
						IndexEnd:    198,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "ve",
						Line:      26,
						Column:    7,
						LineEnd:   26,
						ColumnEnd: 9,
						Index:     200,
						IndexEnd:  202,
					}},
				}},
			}},
		},
	}, {
		// Decode only due to lack of newline at the end.
		"[decode]# HA1\nka:\n  # HB1\n  kb: vb\n  # FB1\n# FA1",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   7,
			ColumnEnd: 1,
			Index:     6,
			IndexEnd:  40,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      2,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 2,
				Index:     6,
				IndexEnd:  35,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1",
					FootComment: "# FA1",
					Line:        2,
					Column:      1,
					LineEnd:     2,
					ColumnEnd:   3,
					Index:       6,
					IndexEnd:    8,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      4,
					Column:    3,
					LineEnd:   5,
					ColumnEnd: 4,
					Index:     20,
					IndexEnd:  29,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1",
						FootComment: "# FB1",
						Line:        4,
						Column:      3,
						LineEnd:     4,
						ColumnEnd:   5,
						Index:       20,
						IndexEnd:    22,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      4,
						Column:    7,
						LineEnd:   4,
						ColumnEnd: 9,
						Index:     24,
						IndexEnd:  26,
					}},
				}},
			},
			},
		},
	}, {
		// Same as above, but with newline at the end.
		"# HA1\nka:\n  # HB1\n  kb: vb\n  # FB1\n# FA1\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   7,
			ColumnEnd: 1,
			Index:     6,
			IndexEnd:  41,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      2,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 2,
				Index:     6,
				IndexEnd:  35,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1",
					FootComment: "# FA1",
					Line:        2,
					Column:      1,
					LineEnd:     2,
					ColumnEnd:   3,
					Index:       6,
					IndexEnd:    8,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      4,
					Column:    3,
					LineEnd:   5,
					ColumnEnd: 4,
					Index:     20,
					IndexEnd:  29,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1",
						FootComment: "# FB1",
						Line:        4,
						Column:      3,
						LineEnd:     4,
						ColumnEnd:   5,
						Index:       20,
						IndexEnd:    22,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      4,
						Column:    7,
						LineEnd:   4,
						ColumnEnd: 9,
						Index:     24,
						IndexEnd:  26,
					}},
				}},
			},
			},
		},
	}, {
		// Same as above, but without FB1.
		"# HA1\nka:\n  # HB1\n  kb: vb\n# FA1\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   6,
			ColumnEnd: 1,
			Index:     6,
			IndexEnd:  33,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      2,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 2,
				Index:     6,
				IndexEnd:  27,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1",
					FootComment: "# FA1",
					Line:        2,
					Column:      1,
					LineEnd:     2,
					ColumnEnd:   3,
					Index:       6,
					IndexEnd:    8,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      4,
					Column:    3,
					LineEnd:   5,
					ColumnEnd: 1,
					Index:     20,
					IndexEnd:  26,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1",
						Line:        4,
						Column:      3,
						LineEnd:     4,
						ColumnEnd:   5,
						Index:       20,
						IndexEnd:    22,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      4,
						Column:    7,
						LineEnd:   4,
						ColumnEnd: 9,
						Index:     24,
						IndexEnd:  26,
					}},
				}},
			},
			},
		},
	}, {
		// Same as above, but with two newlines at the end. Decode-only for that.
		"[decode]# HA1\nka:\n  # HB1\n  kb: vb\n  # FB1\n# FA1\n\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   8,
			ColumnEnd: 1,
			Index:     6,
			IndexEnd:  42,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      2,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 2,
				Index:     6,
				IndexEnd:  35,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1",
					FootComment: "# FA1",
					Line:        2,
					Column:      1,
					LineEnd:     2,
					ColumnEnd:   3,
					Index:       6,
					IndexEnd:    8,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      4,
					Column:    3,
					LineEnd:   5,
					ColumnEnd: 4,
					Index:     20,
					IndexEnd:  29,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1",
						FootComment: "# FB1",
						Line:        4,
						Column:      3,
						LineEnd:     4,
						ColumnEnd:   5,
						Index:       20,
						IndexEnd:    22,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      4,
						Column:    7,
						LineEnd:   4,
						ColumnEnd: 9,
						Index:     24,
						IndexEnd:  26,
					}},
				}},
			},
			},
		},
	}, {
		"ka:\n  kb: vb\n# FA1\n\nkc: vc\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   6,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  27,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   6,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  26,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					Line:        1,
					Column:      1,
					LineEnd:     1,
					ColumnEnd:   3,
					Index:       0,
					IndexEnd:    2,
					FootComment: "# FA1",
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   3,
					ColumnEnd: 1,
					Index:     6,
					IndexEnd:  12,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "kb",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 5,
						Index:     6,
						IndexEnd:  8,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      2,
						Column:    7,
						LineEnd:   2,
						ColumnEnd: 9,
						Index:     10,
						IndexEnd:  12,
					}},
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "kc",
					Line:      5,
					Column:    1,
					LineEnd:   5,
					ColumnEnd: 3,
					Index:     20,
					IndexEnd:  22,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "vc",
					Line:      5,
					Column:    5,
					LineEnd:   5,
					ColumnEnd: 7,
					Index:     24,
					IndexEnd:  26,
				}},
			}},
		},
	}, {
		"ka:\n  kb: vb\n# HC1\nkc: vc\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   5,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  26,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   5,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  25,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "ka",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 3,
					Index:     0,
					IndexEnd:  2,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   3,
					ColumnEnd: 1,
					Index:     6,
					IndexEnd:  12,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "kb",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 5,
						Index:     6,
						IndexEnd:  8,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      2,
						Column:    7,
						LineEnd:   2,
						ColumnEnd: 9,
						Index:     10,
						IndexEnd:  12,
					}},
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "kc",
					HeadComment: "# HC1",
					Line:        4,
					Column:      1,
					LineEnd:     4,
					ColumnEnd:   3,
					Index:       19,
					IndexEnd:    21,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "vc",
					Line:      4,
					Column:    5,
					LineEnd:   4,
					ColumnEnd: 7,
					Index:     23,
					IndexEnd:  25,
				}},
			}},
		},
	}, {
		// Decode only due to empty line before HC1.
		"[decode]ka:\n  kb: vb\n\n# HC1\nkc: vc\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   6,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  27,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   6,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  26,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "ka",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 3,
					Index:     0,
					IndexEnd:  2,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   4,
					ColumnEnd: 1,
					Index:     6,
					IndexEnd:  13,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "kb",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 5,
						Index:     6,
						IndexEnd:  8,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      2,
						Column:    7,
						LineEnd:   2,
						ColumnEnd: 9,
						Index:     10,
						IndexEnd:  12,
					}},
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "kc",
					HeadComment: "# HC1",
					Line:        5,
					Column:      1,
					LineEnd:     5,
					ColumnEnd:   3,
					Index:       20,
					IndexEnd:    22,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "vc",
					Line:      5,
					Column:    5,
					LineEnd:   5,
					ColumnEnd: 7,
					Index:     24,
					IndexEnd:  26,
				}},
			}},
		},
	}, {
		// Decode-only due to empty lines around HC1.
		"[decode]ka:\n  kb: vb\n\n# HC1\n\nkc: vc\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   7,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  28,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   7,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  27,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "ka",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 3,
					Index:     0,
					IndexEnd:  2,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   4,
					ColumnEnd: 1,
					Index:     6,
					IndexEnd:  13,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "kb",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 5,
						Index:     6,
						IndexEnd:  8,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      2,
						Column:    7,
						LineEnd:   2,
						ColumnEnd: 9,
						Index:     10,
						IndexEnd:  12,
					}},
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "kc",
					HeadComment: "# HC1\n",
					Line:        6,
					Column:      1,
					LineEnd:     6,
					ColumnEnd:   3,
					Index:       21,
					IndexEnd:    23,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "vc",
					Line:      6,
					Column:    5,
					LineEnd:   6,
					ColumnEnd: 7,
					Index:     25,
					IndexEnd:  27,
				}},
			}},
		},
	}, {
		"ka: # IA\n  kb: # IB\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   3,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  20,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   3,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  19,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					Line:        1,
					Column:      1,
					LineEnd:     1,
					ColumnEnd:   3,
					Index:       0,
					IndexEnd:    2,
					LineComment: "# IA",
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   2,
					ColumnEnd: 11,
					Index:     11,
					IndexEnd:  18,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						Line:        2,
						Column:      3,
						LineEnd:     2,
						ColumnEnd:   5,
						Index:       11,
						IndexEnd:    13,
						LineComment: "# IB",
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!null",
						Line:      2,
						Column:    6,
						LineEnd:   2,
						ColumnEnd: 6,
						Index:     14,
						IndexEnd:  14,
					}},
				}},
			}},
		},
	}, {
		"# HA1\nka:\n  # HB1\n  kb: vb\n  # FB1\n# HC1\n# HC2\nkc: vc\n# FC1\n# FC2\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   11,
			ColumnEnd: 1,
			Index:     6,
			IndexEnd:  66,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      2,
				Column:    1,
				LineEnd:   9,
				ColumnEnd: 2,
				Index:     6,
				IndexEnd:  54,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1",
					Line:        2,
					Column:      1,
					LineEnd:     2,
					ColumnEnd:   3,
					Index:       6,
					IndexEnd:    8,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      4,
					Column:    3,
					LineEnd:   5,
					ColumnEnd: 4,
					Index:     20,
					IndexEnd:  29,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1",
						FootComment: "# FB1",
						Line:        4,
						Column:      3,
						LineEnd:     4,
						ColumnEnd:   5,
						Index:       20,
						IndexEnd:    22,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      4,
						Column:    7,
						LineEnd:   4,
						ColumnEnd: 9,
						Index:     24,
						IndexEnd:  26,
					}},
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "kc",
					HeadComment: "# HC1\n# HC2",
					FootComment: "# FC1\n# FC2",
					Line:        8,
					Column:      1,
					LineEnd:     8,
					ColumnEnd:   3,
					Index:       47,
					IndexEnd:    49,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "vc",
					Line:      8,
					Column:    5,
					LineEnd:   8,
					ColumnEnd: 7,
					Index:     51,
					IndexEnd:  53,
				}},
			}},
		},
	}, {
		// Same as above, but decode only due to empty line between ka's value and kc's headers.
		"[decode]# HA1\nka:\n  # HB1\n  kb: vb\n  # FB1\n\n# HC1\n# HC2\nkc: vc\n# FC1\n# FC2\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   12,
			ColumnEnd: 1,
			Index:     6,
			IndexEnd:  67,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      2,
				Column:    1,
				LineEnd:   10,
				ColumnEnd: 2,
				Index:     6,
				IndexEnd:  55,
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "ka",
					HeadComment: "# HA1",
					Line:        2,
					Column:      1,
					LineEnd:     2,
					ColumnEnd:   3,
					Index:       6,
					IndexEnd:    8,
				}, {
					Kind:      yaml.MappingNode,
					Tag:       "!!map",
					Line:      4,
					Column:    3,
					LineEnd:   5,
					ColumnEnd: 4,
					Index:     20,
					IndexEnd:  29,
					Content: []*yaml.Node{{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Value:       "kb",
						HeadComment: "# HB1",
						FootComment: "# FB1",
						Line:        4,
						Column:      3,
						LineEnd:     4,
						ColumnEnd:   5,
						Index:       20,
						IndexEnd:    22,
					}, {
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "vb",
						Line:      4,
						Column:    7,
						LineEnd:   4,
						ColumnEnd: 9,
						Index:     24,
						IndexEnd:  26,
					}},
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Value:       "kc",
					HeadComment: "# HC1\n# HC2",
					FootComment: "# FC1\n# FC2",
					Line:        9,
					Column:      1,
					LineEnd:     9,
					ColumnEnd:   3,
					Index:       48,
					IndexEnd:    50,
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "vc",
					Line:      9,
					Column:    5,
					LineEnd:   9,
					ColumnEnd: 7,
					Index:     52,
					IndexEnd:  54,
				}},
			}},
		},
	}, {
		"# H1\n[la, lb] # I\n# F1\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      2,
			Column:    1,
			LineEnd:   4,
			ColumnEnd: 1,
			Index:     5,
			IndexEnd:  23,
			Content: []*yaml.Node{{
				Kind:        yaml.SequenceNode,
				Tag:         "!!seq",
				Style:       yaml.FlowStyle,
				Line:        2,
				Column:      1,
				LineEnd:     2,
				ColumnEnd:   9,
				Index:       5,
				IndexEnd:    13,
				HeadComment: "# H1",
				LineComment: "# I",
				FootComment: "# F1",
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Line:      2,
					Column:    2,
					LineEnd:   2,
					ColumnEnd: 4,
					Index:     6,
					IndexEnd:  8,
					Value:     "la",
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Line:      2,
					Column:    6,
					LineEnd:   2,
					ColumnEnd: 8,
					Index:     10,
					IndexEnd:  12,
					Value:     "lb",
				}},
			}},
		},
	}, {
		"# DH1\n\n# SH1\n[\n  # HA1\n  la, # IA\n  # FA1\n\n  # HB1\n  lb, # IB\n  # FB1\n]\n# SF1\n\n# DF1\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     16,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    85,
			HeadComment: "# DH1",
			FootComment: "# DF1",
			Content: []*yaml.Node{{
				Kind:        yaml.SequenceNode,
				Tag:         "!!seq",
				Style:       yaml.FlowStyle,
				Line:        4,
				Column:      1,
				LineEnd:     12,
				ColumnEnd:   2,
				Index:       13,
				IndexEnd:    71,
				HeadComment: "# SH1",
				FootComment: "# SF1",
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        6,
					Column:      3,
					LineEnd:     6,
					ColumnEnd:   5,
					Index:       25,
					IndexEnd:    27,
					Value:       "la",
					HeadComment: "# HA1",
					LineComment: "# IA",
					FootComment: "# FA1",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        10,
					Column:      3,
					LineEnd:     10,
					ColumnEnd:   5,
					Index:       53,
					IndexEnd:    55,
					Value:       "lb",
					HeadComment: "# HB1",
					LineComment: "# IB",
					FootComment: "# FB1",
				}},
			}},
		},
	}, {
		"# DH1\n\n# SH1\n[\n  # HA1\n  la,\n  # FA1\n\n  # HB1\n  lb,\n  # FB1\n]\n# SF1\n\n# DF1\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     16,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    75,
			HeadComment: "# DH1",
			FootComment: "# DF1",
			Content: []*yaml.Node{{
				Kind:        yaml.SequenceNode,
				Tag:         "!!seq",
				Style:       yaml.FlowStyle,
				Line:        4,
				Column:      1,
				LineEnd:     12,
				ColumnEnd:   2,
				Index:       13,
				IndexEnd:    61,
				HeadComment: "# SH1",
				FootComment: "# SF1",
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        6,
					Column:      3,
					LineEnd:     6,
					ColumnEnd:   5,
					Index:       25,
					IndexEnd:    27,
					Value:       "la",
					HeadComment: "# HA1",
					FootComment: "# FA1",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        10,
					Column:      3,
					LineEnd:     10,
					ColumnEnd:   5,
					Index:       48,
					IndexEnd:    50,
					Value:       "lb",
					HeadComment: "# HB1",
					FootComment: "# FB1",
				}},
			}},
		},
	}, {
		"ka:\n  kb: [\n    # HA1\n    la,\n    # FA1\n\n    # HB1\n    lb,\n    # FB1\n  ]\n",
		yaml.Node{
			Kind:      yaml.DocumentNode,
			Line:      1,
			Column:    1,
			LineEnd:   11,
			ColumnEnd: 1,
			Index:     0,
			IndexEnd:  73,
			Content: []*yaml.Node{{
				Kind:      yaml.MappingNode,
				Tag:       "!!map",
				Line:      1,
				Column:    1,
				LineEnd:   11,
				ColumnEnd: 1,
				Index:     0,
				IndexEnd:  72,
				Content: []*yaml.Node{{
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Value:     "ka",
					Line:      1,
					Column:    1,
					LineEnd:   1,
					ColumnEnd: 3,
					Index:     0,
					IndexEnd:  2,
				}, {
					Kind:      0x4,
					Tag:       "!!map",
					Line:      2,
					Column:    3,
					LineEnd:   10,
					ColumnEnd: 4,
					Index:     6,
					IndexEnd:  71,
					Content: []*yaml.Node{{
						Kind:      yaml.ScalarNode,
						Tag:       "!!str",
						Value:     "kb",
						Line:      2,
						Column:    3,
						LineEnd:   2,
						ColumnEnd: 5,
						Index:     6,
						IndexEnd:  8,
					}, {
						Kind:      yaml.SequenceNode,
						Style:     0x20,
						Tag:       "!!seq",
						Line:      2,
						Column:    7,
						LineEnd:   10,
						ColumnEnd: 4,
						Index:     10,
						IndexEnd:  72,
						Content: []*yaml.Node{{
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Value:       "la",
							HeadComment: "# HA1",
							FootComment: "# FA1",
							Line:        4,
							Column:      5,
							LineEnd:     4,
							ColumnEnd:   7,
							Index:       26,
							IndexEnd:    28,
						}, {
							Kind:        yaml.ScalarNode,
							Tag:         "!!str",
							Value:       "lb",
							HeadComment: "# HB1",
							FootComment: "# FB1",
							Line:        8,
							Column:      5,
							LineEnd:     8,
							ColumnEnd:   7,
							Index:       55,
							IndexEnd:    57,
						}},
					}},
				}},
			}},
		},
	}, {
		"# DH1\n\n# MH1\n{\n  # HA1\n  ka: va, # IA\n  # FA1\n\n  # HB1\n  kb: vb, # IB\n  # FB1\n}\n# MF1\n\n# DF1\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     16,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    93,
			HeadComment: "# DH1",
			FootComment: "# DF1",
			Content: []*yaml.Node{{
				Kind:        yaml.MappingNode,
				Tag:         "!!map",
				Style:       yaml.FlowStyle,
				Line:        4,
				Column:      1,
				LineEnd:     12,
				ColumnEnd:   2,
				Index:       13,
				IndexEnd:    79,
				HeadComment: "# MH1",
				FootComment: "# MF1",
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        6,
					Column:      3,
					LineEnd:     6,
					ColumnEnd:   5,
					Index:       25,
					IndexEnd:    27,
					Value:       "ka",
					HeadComment: "# HA1",
					FootComment: "# FA1",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        6,
					Column:      7,
					LineEnd:     6,
					ColumnEnd:   9,
					Index:       29,
					IndexEnd:    31,
					Value:       "va",
					LineComment: "# IA",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        10,
					Column:      3,
					LineEnd:     10,
					ColumnEnd:   5,
					Index:       57,
					IndexEnd:    59,
					Value:       "kb",
					HeadComment: "# HB1",
					FootComment: "# FB1",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        10,
					Column:      7,
					LineEnd:     10,
					ColumnEnd:   9,
					Index:       61,
					IndexEnd:    63,
					Value:       "vb",
					LineComment: "# IB",
				}},
			}},
		},
	}, {
		"# DH1\n\n# MH1\n{\n  # HA1\n  ka: va,\n  # FA1\n\n  # HB1\n  kb: vb,\n  # FB1\n}\n# MF1\n\n# DF1\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        4,
			Column:      1,
			LineEnd:     16,
			ColumnEnd:   1,
			Index:       13,
			IndexEnd:    83,
			HeadComment: "# DH1",
			FootComment: "# DF1",
			Content: []*yaml.Node{{
				Kind:        yaml.MappingNode,
				Tag:         "!!map",
				Style:       yaml.FlowStyle,
				Line:        4,
				Column:      1,
				LineEnd:     12,
				ColumnEnd:   2,
				Index:       13,
				IndexEnd:    69,
				HeadComment: "# MH1",
				FootComment: "# MF1",
				Content: []*yaml.Node{{
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        6,
					Column:      3,
					LineEnd:     6,
					ColumnEnd:   5,
					Index:       25,
					IndexEnd:    27,
					Value:       "ka",
					HeadComment: "# HA1",
					FootComment: "# FA1",
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Line:      6,
					Column:    7,
					LineEnd:   6,
					ColumnEnd: 9,
					Index:     29,
					IndexEnd:  31,
					Value:     "va",
				}, {
					Kind:        yaml.ScalarNode,
					Tag:         "!!str",
					Line:        10,
					Column:      3,
					LineEnd:     10,
					ColumnEnd:   5,
					Index:       52,
					IndexEnd:    54,
					Value:       "kb",
					HeadComment: "# HB1",
					FootComment: "# FB1",
				}, {
					Kind:      yaml.ScalarNode,
					Tag:       "!!str",
					Line:      10,
					Column:    7,
					LineEnd:   10,
					ColumnEnd: 9,
					Index:     56,
					IndexEnd:  58,
					Value:     "vb",
				}},
			}},
		},
	}, {
		"# DH1\n\n# DH2\n\n# HA1\n# HA2\n- &x la # IA\n# FA1\n# FA2\n\n# HB1\n# HB2\n- *x # IB\n# FB1\n# FB2\n\n# DF1\n\n# DF2\n",
		yaml.Node{
			Kind:        yaml.DocumentNode,
			Line:        7,
			Column:      1,
			LineEnd:     20,
			ColumnEnd:   1,
			Index:       26,
			IndexEnd:    100,
			HeadComment: "# DH1\n\n# DH2",
			FootComment: "# DF1\n\n# DF2",
			Content: []*yaml.Node{{
				Kind:      yaml.SequenceNode,
				Tag:       "!!seq",
				Line:      7,
				Column:    1,
				LineEnd:   14,
				ColumnEnd: 2,
				Index:     26,
				IndexEnd:  74,
				Content: []*yaml.Node{
					saveNode("x", &yaml.Node{
						Kind:        yaml.ScalarNode,
						Tag:         "!!str",
						Line:        7,
						Column:      3,
						LineEnd:     7,
						ColumnEnd:   8,
						Index:       28,
						IndexEnd:    33,
						Value:       "la",
						HeadComment: "# HA1\n# HA2",
						LineComment: "# IA",
						FootComment: "# FA1\n# FA2",
						Anchor:      "x",
					}), {
						Kind:        yaml.AliasNode,
						Line:        13,
						Column:      3,
						LineEnd:     13,
						ColumnEnd:   5,
						Index:       66,
						IndexEnd:    68,
						Value:       "x",
						Alias:       dropNode("x"),
						HeadComment: "# HB1\n# HB2",
						LineComment: "# IB",
						FootComment: "# FB1\n# FB2",
					},
				},
			}},
		},
	},
}

func (s *S) TestNodeRoundtrip(c *C) {
	defer os.Setenv("TZ", os.Getenv("TZ"))
	os.Setenv("TZ", "UTC")
	for i, item := range nodeTests {
		c.Logf("test %d: %q", i, item.yaml)

		if strings.Contains(item.yaml, "#") {
			var buf bytes.Buffer
			fprintComments(&buf, &item.node, "    ")
			c.Logf("  expected comments:\n%s", buf.Bytes())
		}

		decode := true
		encode := true

		testYaml := item.yaml
		if s := strings.TrimPrefix(testYaml, "[decode]"); s != testYaml {
			encode = false
			testYaml = s
		}
		if s := strings.TrimPrefix(testYaml, "[encode]"); s != testYaml {
			decode = false
			testYaml = s
		}

		if decode {
			var node yaml.Node
			err := yaml.Unmarshal([]byte(testYaml), &node)
			c.Assert(err, IsNil)
			if strings.Contains(item.yaml, "#") {
				var buf bytes.Buffer
				fprintComments(&buf, &node, "    ")
				c.Logf("  obtained comments:\n%s", buf.Bytes())
			}
			logPos(c, " ", &node, &item.node)
			c.Assert(node, DeepEquals, item.node)
		}
		if encode {
			node := deepCopyNode(&item.node, nil)
			buf := bytes.Buffer{}
			enc := yaml.NewEncoder(&buf)
			enc.SetIndent(2)
			err := enc.Encode(node)
			c.Assert(err, IsNil)
			err = enc.Close()
			c.Assert(err, IsNil)
			c.Assert(buf.String(), Equals, testYaml)

			// Ensure there were no mutations to the tree.
			c.Assert(node, DeepEquals, &item.node)
		}
	}
}

func logPos(c *C, indent string, a, b *yaml.Node) {
	c.Logf("%s[a] %d,%d %d,%d %d-%d (%s)", indent, a.Line, a.Column, a.LineEnd, a.ColumnEnd, a.Index, a.IndexEnd, a.Tag)
	c.Logf("%s[b] %d,%d %d,%d %d-%d (%s)", indent, b.Line, b.Column, b.LineEnd, b.ColumnEnd, b.Index, b.IndexEnd, b.Tag)

	for i := range a.Content {
		logPos(c, indent+" ", a.Content[i], b.Content[i])
	}
}

func deepCopyNode(node *yaml.Node, cache map[*yaml.Node]*yaml.Node) *yaml.Node {
	if n, ok := cache[node]; ok {
		return n
	}
	if cache == nil {
		cache = make(map[*yaml.Node]*yaml.Node)
	}
	copy := *node
	cache[node] = &copy
	copy.Content = nil
	for _, elem := range node.Content {
		copy.Content = append(copy.Content, deepCopyNode(elem, cache))
	}
	if node.Alias != nil {
		copy.Alias = deepCopyNode(node.Alias, cache)
	}
	return &copy
}

var savedNodes = make(map[string]*yaml.Node)

func saveNode(name string, node *yaml.Node) *yaml.Node {
	savedNodes[name] = node
	return node
}

func peekNode(name string) *yaml.Node {
	return savedNodes[name]
}

func dropNode(name string) *yaml.Node {
	node := savedNodes[name]
	delete(savedNodes, name)
	return node
}

var setStringTests = []struct {
	str  string
	yaml string
	node yaml.Node
}{
	{
		"something simple",
		"something simple\n",
		yaml.Node{
			Kind:  yaml.ScalarNode,
			Value: "something simple",
			Tag:   "!!str",
		},
	}, {
		`"quoted value"`,
		"'\"quoted value\"'\n",
		yaml.Node{
			Kind:  yaml.ScalarNode,
			Value: `"quoted value"`,
			Tag:   "!!str",
		},
	}, {
		"multi\nline",
		"|-\n  multi\n  line\n",
		yaml.Node{
			Kind:  yaml.ScalarNode,
			Value: "multi\nline",
			Tag:   "!!str",
			Style: yaml.LiteralStyle,
		},
	}, {
		"123",
		"\"123\"\n",
		yaml.Node{
			Kind:  yaml.ScalarNode,
			Value: "123",
			Tag:   "!!str",
		},
	}, {
		"multi\nline\n",
		"|\n  multi\n  line\n",
		yaml.Node{
			Kind:  yaml.ScalarNode,
			Value: "multi\nline\n",
			Tag:   "!!str",
			Style: yaml.LiteralStyle,
		},
	}, {
		"\x80\x81\x82",
		"!!binary gIGC\n",
		yaml.Node{
			Kind:  yaml.ScalarNode,
			Value: "gIGC",
			Tag:   "!!binary",
		},
	},
}

func (s *S) TestSetString(c *C) {
	defer os.Setenv("TZ", os.Getenv("TZ"))
	os.Setenv("TZ", "UTC")
	for i, item := range setStringTests {
		c.Logf("test %d: %q", i, item.str)

		var node yaml.Node

		node.SetString(item.str)

		c.Assert(node, DeepEquals, item.node)

		buf := bytes.Buffer{}
		enc := yaml.NewEncoder(&buf)
		enc.SetIndent(2)
		err := enc.Encode(&item.node)
		c.Assert(err, IsNil)
		err = enc.Close()
		c.Assert(err, IsNil)
		c.Assert(buf.String(), Equals, item.yaml)

		var doc yaml.Node
		err = yaml.Unmarshal([]byte(item.yaml), &doc)
		c.Assert(err, IsNil)

		var str string
		err = node.Decode(&str)
		c.Assert(err, IsNil)
		c.Assert(str, Equals, item.str)
	}
}

func fprintComments(out io.Writer, node *yaml.Node, indent string) {
	switch node.Kind {
	case yaml.ScalarNode:
		fmt.Fprintf(out, "%s<%s> ", indent, node.Value)
		fprintCommentSet(out, node)
		fmt.Fprintf(out, "\n")
	case yaml.DocumentNode:
		fmt.Fprintf(out, "%s<DOC> ", indent)
		fprintCommentSet(out, node)
		fmt.Fprintf(out, "\n")
		for i := 0; i < len(node.Content); i++ {
			fprintComments(out, node.Content[i], indent+"  ")
		}
	case yaml.MappingNode:
		fmt.Fprintf(out, "%s<MAP> ", indent)
		fprintCommentSet(out, node)
		fmt.Fprintf(out, "\n")
		for i := 0; i < len(node.Content); i += 2 {
			fprintComments(out, node.Content[i], indent+"  ")
			fprintComments(out, node.Content[i+1], indent+"  ")
		}
	case yaml.SequenceNode:
		fmt.Fprintf(out, "%s<SEQ> ", indent)
		fprintCommentSet(out, node)
		fmt.Fprintf(out, "\n")
		for i := 0; i < len(node.Content); i++ {
			fprintComments(out, node.Content[i], indent+"  ")
		}
	}
}

func fprintCommentSet(out io.Writer, node *yaml.Node) {
	if len(node.HeadComment)+len(node.LineComment)+len(node.FootComment) > 0 {
		fmt.Fprintf(out, "%q / %q / %q", node.HeadComment, node.LineComment, node.FootComment)
	}
}
